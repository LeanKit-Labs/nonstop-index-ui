var gulp = require( "gulp" );
var file = require( "gulp-file" );
var glob = require( "glob" );
var argv = require( "yargs" ).argv;
var _ = require( "lodash" );

gulp.task( "test:build-karma-index", function() {
	var karmaIndex = [
		"// HEADS UP! THIS FILE IS AUTO-GENERATED BY THE 'test:build-karma-index' gulp task.",
		"",
		"require( \"./helpers/phantomjs-shims.js\" );",
		"require( \"./helpers/setup.js\" );"
	];

	if ( argv.single ) {
		karmaIndex.push( "require( \"./" + argv.single + "\" );" );
	} else {
		karmaIndex = karmaIndex.concat(
			glob.sync( argv.grep ? argv.grep : "**/*.spec.js*", { cwd: "./client/spec" } ).map( function( file ) {
				return "require( \"./" + file + "\" );";
			} )
		);
	}

	return file( "karma-index.js", karmaIndex.join( "\n" ), { src: true } )
		.pipe( gulp.dest( "./client/spec" ) );
} );

function runTests( options, done ) {
	var karma = require( "karma" );
	var server = new karma.Server( _.extend( {
		configFile: appConfig.root + "/karma.conf.js",
		singleRun: true

		// no-op keeps karma from process.exit'ing gulp
	}, options ), done || function() {} );

	server.start();
}

gulp.task( "karma-test-ci", [ "webpack:watch", "webpack:test" ], function() {
	gulp.watch( [ "client/spec/**/*.js*", "!client/spec/karma-index.js" ], function( event ) {
		if ( event.type === "added" || event.type === "deleted" ) {
			gulp.run( "test:build-karma-index" );
		}
	} );

	runTests( {
		autoWatch: true,
		singleRun: false,
		client: {
			mocha: {
				bail: true
			}
		}
	} );
} );

gulp.task( "karma-test", [ "webpack:test" ], function( done ) {
	// There are issues with the osx reporter keeping
	// the node process running, so this forces the main
	// test task to not show errors in a notification
	runTests( { reporters: [ "spec" ] }, function( err ) {
		if ( err !== 0 ) {
			// Exit with the error code
			process.exit( err );
		} else {
			done( null );
		}
	} );
} );

var gulpMocha = require( "gulp-spawn-mocha" );

function runMocha( singleRun ) {
	return gulp.src( "./_spec-tmp/js/test.js", { read: false } )
		.pipe( gulpMocha( {
			R: "spec",
			r: [
				"./client/spec/helpers/node-setup.js"
			]
		} ) ).on( "error", function() {
			if ( singleRun ) {
				process.exit( 1 );
			}
		} );
}

gulp.task( "node-test-ci", [ "webpack:watch", "webpack:test" ], function() {
	gulp.watch( "./_spec-tmp/js/test.js", _.debounce( function() {
		runMocha( false );
	}, 200 ) );
	return runMocha();
} );

gulp.task( "node-test", [ "webpack:test" ], function() {
	return runMocha( true );
} );

gulp.task( "test", [ "karma-test" ] );
gulp.task( "test-ci", [ "karma-test-ci" ] );

gulp.task( "coverage", [ "webpack:coverage" ], function( done ) {
	// There are issues with the osx reporter keeping
	// the node process running, so this forces the main
	// test task to not show errors in a notification
	runTests( { reporters: [ "progress", "coverage" ] }, function( err ) {
		if ( err !== 0 ) {
			// Exit with the error code
			process.exit( err );
		} else {
			done( null );
		}
	} );
} );
